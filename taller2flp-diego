#lang eopl
;la base 32 utiliza simbolos del 0-31
( define zero ( lambda ( ) '( ) ) )

( define is-zero? ( lambda ( n ) ( null? n ) ) )

( define successor ( lambda ( n ) (if (is-zero? n)(cons 1 n)
                                      (if (< (car n) 31)
                                      (cons (+(car n) 1) (cdr n))
                                            (cons 0 (successor (cdr n)))))) ) 

( define predecessor ( lambda ( n ) (if (is-zero? n)( zero )
                                        (if (and(>= (ca  (cons 31 (predecessor (cdr n) ) )
                                                        (cons 0 (predecessor (cdr n) ) ) ) ) ) ) ) ) 
r n) 1 ) (>(length n)1)) ;;(not (is-zero?(cdr n)))
                                            (cons (-(car n)1 ) (cdr n) )
                                            (if (and(eq?(length n)1) (>(car n) 1 ) ) 
                                                    (cons (-(car n)1 ) (predecessor (cdr n) ) )
                                                     (if (and (is-zero?(cdr n)) (eq?(car n)1))
                                                         (cons 31 (predecessor (cdr n) ) )
                                                          (cons 0 (predecessor (cdr n) ) ) ) ) ) ) ) ) 
